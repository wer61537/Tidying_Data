source('C:/Temp/coursera/Getting_Cleaning_Data/run_analysis.R')
fileName <- "Dataset.zip"
datafile <-"household_power_consumption.txt"
if(! file.exists(fileName)) {
message("Downloading the data set archive...")
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url=fileURL,destfile=fileName)
}
if(! dir.exists("UCI HAR Dataset")) {
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir="./")
}
if(! dir.exists("UCI HAR Dataset")) {
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir="./")
}
if(! file.exists("UCI HAR Dataset")) {
dir.create("./UCI HAR Dataset")
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir="./UCI HAR Dataset")
}
library(dplyr)
library(data.table)
library(tidyr)
fileName <- "Dataset.zip"
dir <-"UCI HAR Dataset"
if(! file.exists(fileName)) {
message("Downloading the data set archive...")
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url=fileURL,destfile=fileName)
}
#extract if needed
# Extract Data Files
if(! file.exists(dir)) {
dir.create("./"dir)
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir="./"dir)
}
# Extract Data Files
if(! file.exists(dir)) {
dir.create(paste("./",dir))
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir=paste("./",dir))
}
if(! file.exists(dir)) {
dir.create(paste("./",dir))
}
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir=paste("./",dir))
if(! file.exists(dir)) {
dir.create(dir)
}
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir=paste(dir))
# Extract Data Files
if(! file.exists(dir)) {
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir=paste(dir))
}
if(! file.exists(dir)) {
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName, exdir=./)
}
source('C:/Temp/coursera/Getting_Cleaning_Data/run_analysis.R')
if(! file.exists(dir)) {
message("Extracting the data set files from the archive...")
unzip(zipfile=fileName)
}
source('C:/Temp/coursera/Getting_Cleaning_Data/run_analysis.R')
# Read subject files
dataSubjectTrain <- tbl_df(read.table(file.path(dir, "train", "subject_train.txt")))
dataSubjectTest  <- tbl_df(read.table(file.path(dir, "test" , "subject_test.txt" )))
# Read subject files
dataSubjectTrain <- tbl_df(read.table(file.path(dir, "train", "subject_train.txt")))
dataSubjectTest  <- tbl_df(read.table(file.path(dir, "test" , "subject_test.txt" )))
# Read activity files
dataActivityTrain <- tbl_df(read.table(file.path(dir, "train", "Y_train.txt")))
dataActivityTest  <- tbl_df(read.table(file.path(dir, "test" , "Y_test.txt" )))
#Read data files.
dataTrain <- tbl_df(read.table(file.path(dir, "train", "X_train.txt" )))
dataTest  <- tbl_df(read.table(file.path(dir, "test" , "X_test.txt" )))
# for both Activity and Subject files this will merge the training and the test sets by row binding
#and rename variables "subject" and "activityNum"
alldataSubject <- rbind(dataSubjectTrain, dataSubjectTest)
setnames(alldataSubject, "V1", "subject")
alldataActivity<- rbind(dataActivityTrain, dataActivityTest)
setnames(alldataActivity, "V1", "activityNum")
#combine the DATA training and test files
dataTable <- rbind(dataTrain, dataTest)
# name variables according to feature e.g.(V1 = "tBodyAcc-mean()-X")
dataFeatures <- tbl_df(read.table(file.path(filesPath, "features.txt")))
setnames(dataFeatures, names(dataFeatures), c("featureNum", "featureName"))
colnames(dataTable) <- dataFeatures$featureName
#column names for activity labels
activityLabels<- tbl_df(read.table(file.path(filesPath, "activity_labels.txt")))
setnames(activityLabels, names(activityLabels), c("activityNum","activityName"))
# Merge columns
alldataSubjAct<- cbind(alldataSubject, alldataActivity)
dataTable <- cbind(alldataSubjAct, dataTable)
#column names for activity labels
activityLabels<- tbl_df(read.table(file.path(dir, "activity_labels.txt")))
setnames(activityLabels, names(activityLabels), c("activityNum","activityName"))
# Merge columns
alldataSubjAct<- cbind(alldataSubject, alldataActivity)
dataTable <- cbind(alldataSubjAct, dataTable)
# Reading "features.txt" and extracting only the mean and standard deviation
dataFeaturesMeanStd <- grep("mean\\(\\)|std\\(\\)",dataFeatures$featureName,value=TRUE) #var name
# Taking only measurements for the mean and standard deviation and add "subject","activityNum"
dataFeaturesMeanStd <- union(c("subject","activityNum"), dataFeaturesMeanStd)
dataTable<- subset(dataTable,select=dataFeaturesMeanStd)
# name variables according to feature e.g.(V1 = "tBodyAcc-mean()-X")
dataFeatures <- tbl_df(read.table(file.path(dir, "features.txt")))
setnames(dataFeatures, names(dataFeatures), c("featureNum", "featureName"))
colnames(dataTable) <- dataFeatures$featureName
#column names for activity labels
activityLabels<- tbl_df(read.table(file.path(dir, "activity_labels.txt")))
setnames(activityLabels, names(activityLabels), c("activityNum","activityName"))
# Merge columns
alldataSubjAct<- cbind(alldataSubject, alldataActivity)
dataTable <- cbind(alldataSubjAct, dataTable)
##enter name of activity into dataTable
dataTable <- merge(activityLabels, dataTable , by="activityNum", all.x=TRUE)
dataTable$activityName <- as.character(dataTable$activityName)
## create dataTable with variable means sorted by subject and Activity
dataTable$activityName <- as.character(dataTable$activityName)
dataAggr<- aggregate(. ~ subject - activityName, data = dataTable, mean)
dataTable<- tbl_df(arrange(dataAggr,subject,activityName))
head(str(dataTable),2)
#Names before
head(str(dataTable),2)
names(dataTable)<-gsub("std()", "SD", names(dataTable))
names(dataTable)<-gsub("mean()", "MEAN", names(dataTable))
names(dataTable)<-gsub("^t", "time", names(dataTable))
names(dataTable)<-gsub("^f", "frequency", names(dataTable))
names(dataTable)<-gsub("Acc", "Accelerometer", names(dataTable))
names(dataTable)<-gsub("Gyro", "Gyroscope", names(dataTable))
names(dataTable)<-gsub("Mag", "Magnitude", names(dataTable))
names(dataTable)<-gsub("BodyBody", "Body", names(dataTable))
# Names after
head(str(dataTable),6)
##write to text file on disk
write.table(dataTable, "TidyData.txt", row.name=FALSE)
## Merges the training and the test sets to create one data set.
## Extracts only the measurements on the mean and standard deviation
##   for each measurement.
## Uses descriptive activity names to name the activities in the data set
## Appropriately labels the data set with descriptive variable names.
## From the data set in step 4, creates a second, independent tidy data
##   set with the average of each variable for each activity and each subject.
#  Load needed packages
library(dplyr)
library(data.table)
library(tidyr)
#global vars
fileName <- "Dataset.zip"
dir <-"UCI HAR Dataset"
# Download, extract dataset as need
if(! file.exists(fileName)) {
message("Downloading Dataset.zip  ...")
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url=fileURL,destfile=fileName)
}
#extract if needed
# Extract Data Files from Dataset.zip
if(! file.exists(dir)) {
message("Extracting the separate data set files from Dataset.zip ...")
unzip(zipfile=fileName)
}
dataSubjectTrain <- tbl_df(read.table(file.path(dir, "train", "subject_train.txt")))
trainSubjects <- read.table("train/subject_train.txt", header=FALSE)
dataSubjectTrain <- tbl_df(read.table(file.path(dir, "train", "subject_train.txt")))
str(dataSubjectTrain)
dataSubjectTrain <- read.table(file.path(dir, "train", "subject_train.txt"))
str(dataSubjectTrain)
source('C:/Temp/coursera/Getting_Cleaning_Data/run_analysis.R', encoding = 'UTF-8')
